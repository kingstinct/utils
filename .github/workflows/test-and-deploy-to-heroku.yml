# This is a basic workflow to help you get started with Actions

name: Test and deploy to Heroku

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  workflow_call:
    inputs:
      heroku_app_name:
        required: true
        type: string
      heroku_email:
        type: string
        required: false
    secrets:
      HEROKU_API_KEY:
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  setup:
    runs-on: ubuntu-latest
    outputs:
      test-chunks: ${{ steps['set-test-chunks'].outputs['test-chunks'] }}
      test-chunk-ids: ${{ steps['set-test-chunk-ids'].outputs['test-chunk-ids'] }}
    steps:
      - uses: actions/checkout@v2

      - uses: pnpm/action-setup@v2.2.2
        with:
          version: 7

      - uses: actions/setup-node@v2
        with:
          node-version-file: .nvmrc
          cache: pnpm

      - run: pnpm install

      - id: set-test-chunks
        name: Set Chunks
        run: echo "::set-output name=test-chunks::$(npx jest --listTests --json | jq -cM '[_nwise(length / 4 | ceil)]')"

      - id: set-test-chunk-ids
        name: Set Chunk IDs
        run: echo "::set-output name=test-chunk-ids::$(echo $CHUNKS | jq -cM 'to_entries | map(.key)')"
        env:
          CHUNKS: ${{ steps['set-test-chunks'].outputs['test-chunks'] }}
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    name: lint
    steps:
      - uses: actions/checkout@v2
      - uses: pnpm/action-setup@v2.2.2
        with:
          version: 7

      - uses: actions/setup-node@v2
        with:
          node-version-file: .nvmrc
          cache: pnpm

      - run: pnpm install

      - name: lint
        run: pnpm lint-only

      - name: typecheck
        run: pnpm typecheck

  test:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    name: test (chunk ${{ matrix.chunk }})
    needs: setup
    strategy:
      matrix:
        chunk: ${{ fromJson(needs.setup.outputs['test-chunk-ids']) }}
    steps:
      - uses: actions/checkout@v2
      - uses: pnpm/action-setup@v2.2.2
        with:
          version: 7

      - uses: actions/setup-node@v2
        with:
          node-version-file: .nvmrc
          cache: pnpm

      - run: pnpm install

      - name: jest
        run: echo $CHUNKS | jq '.[${{ matrix.chunk }}] | .[] | @text' | xargs pnpm test-only
        env:
          CHUNKS: ${{ needs.setup.outputs['test-chunks'] }}
          NODE_OPTIONS: --max-old-space-size=4096

  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2.3.4

      - uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{ inputs.heroku_app_name }} # Must be unique in Heroku
          heroku_email: ${{ inputs.heroku_email }}
          justlogin: true

      - name: Login to Heroku Container registry
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:login

      - name: Build and push Docker image
        run: heroku container:push web -a ${{ inputs.heroku_app_name }}

  release-to-heroku:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: [ test, lint, build ]
    timeout-minutes: 2

    environment:
      name: ${{ inputs.heroku_app_name }}
      url: https://${{ inputs.heroku_app_name }}.herokuapp.com/playground

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2.3.4

      - uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{ inputs.heroku_app_name }} # Must be unique in Heroku
          heroku_email: ${{ inputs.heroku_email }}
          justlogin: true

      - name: Login to Heroku Container registry
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:login

      - name: Release
        run: heroku container:release web -a ${{ inputs.heroku_app_name }}
